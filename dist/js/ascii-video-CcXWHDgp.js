import"./modulepreload-polyfill-B5Qt9EMX.js";import{A as r}from"./ascii3d-engine-3CD9aKHD.js";import"./dom-utils-UozHuNU6.js";class l{constructor(){this.engine=null,this.canvas=null,this.stats={fps:0,renderTime:0,memory:0,interactionCount:0,morphProgress:0},this.testModels=["sword","pxm-logo","cube","stone-tower","lumpy","castle-archers","sphere","torus"],this.currentModelIndex=0,this.performanceInterval=null,this.customFileUrls=new Set,this.init()}async init(){console.log("🧪 Initializing ASCII 3D Video Lab...");try{if(!this.checkWebGLSupport()){this.showError("WebGL not supported. 3D ASCII engine requires WebGL.");return}if(this.canvas=document.getElementById("ascii3dCanvas"),!this.canvas){this.showError("ASCII 3D canvas not found.");return}this.engine=new r,await this.engine.init(this.canvas),this.startPerformanceMonitoring(),this.setupKeyboardShortcuts(),this.setupFileUpload(),this.setupResolutionSlider(),this.setupScaleSlider(),this.engine.startAnimation(),this.hideLoading(),this.updateEngineStatus("RUNNING"),console.log("✅ ASCII 3D Video Lab initialized successfully")}catch(e){console.error("❌ Video lab initialization failed:",e),this.showError(`Initialization failed: ${e.message}`)}}checkWebGLSupport(){try{const e=document.createElement("canvas");return!!(e.getContext("webgl")||e.getContext("experimental-webgl"))}catch{return!1}}hideLoading(){const e=document.getElementById("loadingIndicator");e&&(e.style.display="none")}showError(e){console.error("🚨 TERMINAL ERROR:",e);const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 300;
            background: rgba(0, 0, 0, 0.95);
            color: #3300ff;
            padding: 20px;
            border: 2px solid #3300ff;
            font-family: monospace;
            font-size: 12px;
            text-align: center;
            max-width: 400px;
            white-space: pre-line;
        `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},3e3),this.hideLoading(),this.updateEngineStatus("ERROR")}updateEngineStatus(e){const t=document.getElementById("engineStatus");t&&(t.textContent=e)}startPerformanceMonitoring(){this.performanceInterval=setInterval(()=>{if(this.engine){const e=this.engine.getPerformanceStats();this.stats={...this.stats,...e},this.updatePerformanceDisplay()}},1e3)}updatePerformanceDisplay(){const e={fpsDisplay:Math.round(this.stats.fps),renderTimeDisplay:`${Math.round(this.stats.renderTime)}ms`,memoryDisplay:`${Math.round(this.stats.memory)}MB`,interactionCount:this.stats.interactionCount};Object.entries(e).forEach(([t,n])=>{const i=document.getElementById(t);i&&(i.textContent=n)})}setupKeyboardShortcuts(){document.addEventListener("keydown",e=>{switch(e.key.toLowerCase()){case"r":e.preventDefault(),this.resetEngine();break;case"m":e.preventDefault(),this.toggleModels();break;case"p":e.preventDefault(),this.cyclePerformanceMode();break;case"s":e.preventDefault(),this.toggleSlowRotation();break;case"i":e.preventDefault(),this.showInteractionInfo();break;case"escape":e.preventDefault(),this.stopAnimation();break}})}setupFileUpload(){const e=document.getElementById("file-input");e&&e.addEventListener("change",t=>this.handleFileUpload(t))}setupResolutionSlider(){const e=document.getElementById("resolution-slider"),t=document.getElementById("resolution-value");e&&t&&(e.addEventListener("input",n=>{const i=parseFloat(n.target.value);t.textContent=i.toFixed(1),this.engine&&this.engine.setResolution&&this.engine.setResolution(i)}),console.log("✅ Resolution slider setup complete"))}setupScaleSlider(){const e=document.getElementById("scale-slider"),t=document.getElementById("scale-value");e&&t&&(e.addEventListener("input",n=>{const i=parseFloat(n.target.value);t.textContent=`${i.toFixed(1)}x`,this.engine&&this.engine.setModelScale&&this.engine.setModelScale(i)}),console.log("✅ Scale slider setup complete"))}triggerFileUpload(){const e=document.getElementById("file-input");e&&e.click()}async handleFileUpload(e){const t=e.target.files[0];if(t){try{const n=this.validateFile(t);if(!n.valid){this.showTerminalError(n.error);return}console.log(`📁 Loading custom file: ${t.name}`),this.updateEngineStatus("LOADING FILE");const i=URL.createObjectURL(t);this.customFileUrls.add(i);const o=t.name.split(".").pop().toLowerCase();await this.loadCustomFile(i,o),console.log(`✅ Custom file ${t.name} loaded successfully`),this.updateEngineStatus("RUNNING")}catch(n){console.error("❌ Failed to load custom file:",n),this.showTerminalError(`FILE LOAD ERROR: ${n.message}`),this.updateEngineStatus("ERROR")}e.target.value=""}}validateFile(e){const n=["glb","gltf","obj"],i=e.name.split(".").pop().toLowerCase();return n.includes(i)?e.size>52428800?{valid:!1,error:`FILE TOO LARGE: ${Math.round(e.size/1024/1024)}MB
MAX SIZE: 50MB`}:{valid:!0}:{valid:!1,error:`UNSUPPORTED FORMAT: ${i.toUpperCase()}
ACCEPTED: .GLB, .GLTF, .OBJ`}}async loadCustomFile(e,t){if(!this.engine)throw new Error("Engine not initialized");await this.engine.loadModel(e,t)}showTerminalError(e){console.error("🚨 TERMINAL ERROR:",e);const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 300;
            background: rgba(0, 0, 0, 0.95);
            color: #3300ff;
            padding: 20px;
            border: 2px solid #3300ff;
            font-family: monospace;
            font-size: 12px;
            text-align: center;
            max-width: 400px;
            white-space: pre-line;
        `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},3e3)}async loadModel(e){if(!this.engine){console.warn("Engine not initialized");return}try{console.log(`🎯 Loading test model: ${e}`),await this.engine.loadModel(e),console.log(`✅ Model ${e} loaded successfully`)}catch(t){console.error(`❌ Failed to load model ${e}:`,t),this.showError(`Failed to load model: ${t.message}`)}}changeResolution(e){if(!this.engine)return;const n={high:{width:120,height:60},medium:{width:80,height:40},low:{width:60,height:30}}[e];n&&(console.log(`🔧 Changing ASCII resolution to ${e}:`,n),this.engine.setResolution(n.width,n.height))}changePerformance(e){this.engine&&(console.log(`⚡ Setting performance level to: ${e}`),this.engine.setPerformanceMode(e))}testMorphing(){if(!this.engine)return;console.log("🔄 Testing morphing functionality..."),[{x:400,y:300},{x:500,y:300},{x:600,y:300},{x:500,y:400},{x:400,y:400}].forEach((t,n)=>{setTimeout(()=>{this.engine.updateMousePosition(t.x,t.y),this.engine.simulateInteraction(t.x,t.y)},n*200)})}resetInteractions(){this.engine&&(console.log("🔄 Resetting interactions..."),this.engine.resetInteractions(),this.stats.interactionCount=0,this.stats.morphProgress=0,this.updatePerformanceDisplay())}async resetEngine(){console.log("🔄 Resetting engine..."),this.engine&&(this.engine.stopAnimation(),await this.engine.dispose()),this.engine=new r,await this.engine.init(this.canvas),this.engine.startAnimation(),this.updateEngineStatus("RESET"),console.log("✅ Engine reset complete")}toggleModels(){this.currentModelIndex=(this.currentModelIndex+1)%this.testModels.length;const e=this.testModels[this.currentModelIndex];console.log(`🔄 Toggling to model: ${e}`),this.loadModel(e)}cyclePerformanceMode(){var s;const e=["high","medium","low"],t=((s=this.engine)==null?void 0:s.getPerformanceMode())||"high",i=(e.indexOf(t)+1)%e.length,o=e[i];console.log(`⚡ Cycling performance: ${t} → ${o}`),this.changePerformance(o)}toggleSlowRotation(){if(!this.engine){console.warn("⚠️ Engine not initialized");return}if(typeof this.engine.rotationSpeed<"u"){const t=(this.engine.rotationSpeed||.005)===.005?.001:.005;this.engine.rotationSpeed=t;const n=t===.001?"SLOW":"NORMAL";console.log(`🔄 Rotation speed: ${n} (${t})`);const i=document.getElementById("rotation-status");i&&(i.textContent=`Rotation: ${n}`)}else this.engine.rotationSpeed=.001,console.log("🔄 Slow rotation enabled (0.001)")}showInteractionInfo(){if(!this.engine)return;const e=this.engine.getInteractionData();console.log("📊 Interaction Info:",e),alert(`Interactions: ${e.count}
Crossings: ${e.crossings}
Morph Progress: ${e.morphProgress}%`)}stopAnimation(){this.engine&&(console.log("⏹️ Stopping animation..."),this.engine.stopAnimation(),this.updateEngineStatus("STOPPED"))}destroy(){this.performanceInterval&&clearInterval(this.performanceInterval),this.customFileUrls.forEach(e=>{try{URL.revokeObjectURL(e)}catch(t){console.warn("Failed to revoke object URL:",t)}}),this.customFileUrls.clear(),this.engine&&(this.engine.stopAnimation(),this.engine.dispose(),this.engine=null),console.log("🧹 Video lab cleaned up")}toggleAutoRotate(){if(!this.engine){console.warn("⚠️ Engine not initialized");return}const t=!(this.engine.getAutoRotate?this.engine.getAutoRotate():!1);this.engine.setAutoRotate&&(this.engine.setAutoRotate(t),console.log(`🔄 Auto-rotate ${t?"enabled":"disabled"}`))}}const a=new l;window.testEngine=a;window.addEventListener("beforeunload",()=>{a.destroy()});console.log("🧪 ASCII 3D Video Lab loaded");
